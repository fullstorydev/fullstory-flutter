plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'fullstory'
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))
if (!localProperties.containsKey('FSOrgId')) {
    throw new GradleException('Please add a FSOrgId=<Your Fullstory OrgID> line to example/android/local.properties');
}

fullstory {
  org localProperties['FSOrgId']
  enabledVariants 'all'
  logcatLevel 'error'
  logLevel 'log'
  if (localProperties.containsKey('FSServerUrl')) {
    // This is for Fullstory internal testing and should not be needed when building your own app.
    serverUrl localProperties['FSServerUrl']
  }
  verboseLogging true
}

android {
    namespace = "com.example.fullstory_flutter_example"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.fullstory_flutter_example"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
        }
    }
}

flutter {
    source = "../.."
}
